-- public.answers определение

-- Drop table

-- DROP TABLE answers;

CREATE TABLE answers (
	id int8 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	answer varchar(200) NOT NULL,
	question_id int8 NOT NULL,
	accuracy bool DEFAULT false NOT NULL,
	CONSTRAINT answers_pk PRIMARY KEY (id)
);


-- public.question определение

-- Drop table

-- DROP TABLE question;

CREATE TABLE question (
	id int8 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	test_id int8 NOT NULL,
	"number" int4 NOT NULL,
	question varchar(500) NOT NULL,
	CONSTRAINT question_pk PRIMARY KEY (id)
);


-- public.student определение

-- Drop table

-- DROP TABLE student;

CREATE TABLE student (
	id int8 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar(200) NOT NULL,
	test_id int8 NOT NULL,
	time_of_delivery time NOT NULL,
	result_test int4 NULL,
	CONSTRAINT test_primary_key PRIMARY KEY (id)
);


-- public.test определение

-- Drop table

-- DROP TABLE test;

CREATE TABLE test (
	id int8 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar(200) NOT NULL,
	student_id int8 NULL,
	CONSTRAINT test_pk PRIMARY KEY (id)
);


-- public.answers внешние включи

ALTER TABLE public.answers ADD CONSTRAINT answers_question_fk FOREIGN KEY (question_id) REFERENCES question(id);


-- public.question внешние включи

ALTER TABLE public.question ADD CONSTRAINT question_test_fk FOREIGN KEY (test_id) REFERENCES test(id);


-- public.student внешние включи

ALTER TABLE public.student ADD CONSTRAINT student_test_fk FOREIGN KEY (test_id) REFERENCES test(id);
ALTER TABLE public.student ADD CONSTRAINT student_test_result FOREIGN KEY (result_test) REFERENCES test(id);


-- public.test внешние включи

ALTER TABLE public.test ADD CONSTRAINT test_student_fk FOREIGN KEY (student_id) REFERENCES student(id);
